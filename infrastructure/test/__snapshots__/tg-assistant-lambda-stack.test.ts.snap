// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TgAssistantLambdaStack (ZIP-based Node.js Lambda) creates Lambda invoke permission for HTTP API (pattern covered by snapshot) 1`] = `
{
  "Description": "Test stack",
  "Outputs": {
    "ApiGatewaySourceArn": {
      "Value": "arn:aws:execute-api:us-east-1:123456789012:abc123/beta/*",
    },
    "FunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "Function76856677",
          "Arn",
        ],
      },
    },
    "FunctionName": {
      "Value": {
        "Ref": "Function76856677",
      },
    },
    "LambdaRegion": {
      "Value": "us-east-1",
    },
    "TelegramWebhookSecretArn": {
      "Value": {
        "Ref": "TelegramWebhookSecret2F3DC73E",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiGatewayInvokePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Function76856677",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": "arn:aws:execute-api:us-east-1:123456789012:abc123/beta/*",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Function76856677": {
      "DependsOn": [
        "LambdaExecutionRoleDefaultPolicy6D69732F",
        "LambdaExecutionRoleD5C26073",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "ZipFile": "exports.handler = async () => { return { statusCode: 200, body: "ok" }; };",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "production",
            "TELEGRAM_WEBHOOK_SECRET_ARN": {
              "Ref": "TelegramWebhookSecret2F3DC73E",
            },
          },
        },
        "FunctionName": "telegram-webhook-lambda-dev",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRoleD5C26073",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionLogRetention5FDF6B4D": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Function76856677",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "LambdaExecutionRoleD5C26073": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Execution role for Lambda to write logs",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "telegram-webhook-lambda-role-dev",
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaExecutionRoleDefaultPolicy6D69732F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TelegramWebhookSecret2F3DC73E",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
        "Roles": [
          {
            "Ref": "LambdaExecutionRoleD5C26073",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TelegramWebhookSecret2F3DC73E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Telegram webhook secret used to validate updates",
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "webhookSecret",
          "PasswordLength": 32,
          "SecretStringTemplate": "{}",
        },
        "Name": "/tg-assistant/telegram-webhook-secret/dev",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`TgAssistantLambdaStack (ZIP-based Node.js Lambda) synthesizes expected CloudFormation template (snapshot) 1`] = `
{
  "Description": "Test stack",
  "Outputs": {
    "FunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "Function76856677",
          "Arn",
        ],
      },
    },
    "FunctionName": {
      "Value": {
        "Ref": "Function76856677",
      },
    },
    "LambdaRegion": {
      "Value": "us-east-1",
    },
    "TelegramWebhookSecretArn": {
      "Value": {
        "Ref": "TelegramWebhookSecret2F3DC73E",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Function76856677": {
      "DependsOn": [
        "LambdaExecutionRoleDefaultPolicy6D69732F",
        "LambdaExecutionRoleD5C26073",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "production",
            "TELEGRAM_WEBHOOK_SECRET_ARN": {
              "Ref": "TelegramWebhookSecret2F3DC73E",
            },
          },
        },
        "FunctionName": "telegram-webhook-lambda-dev",
        "Handler": "dist/index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRoleD5C26073",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionLogRetention5FDF6B4D": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Function76856677",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "LambdaExecutionRoleD5C26073": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Execution role for Lambda to write logs",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "telegram-webhook-lambda-role-dev",
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaExecutionRoleDefaultPolicy6D69732F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "TelegramWebhookSecret2F3DC73E",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
        "Roles": [
          {
            "Ref": "LambdaExecutionRoleD5C26073",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TelegramWebhookSecret2F3DC73E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Telegram webhook secret used to validate updates",
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "webhookSecret",
          "PasswordLength": 32,
          "SecretStringTemplate": "{}",
        },
        "Name": "/tg-assistant/telegram-webhook-secret/dev",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
